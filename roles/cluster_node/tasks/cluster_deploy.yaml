---
#- name: "add Mirantis internal DNS"
#  lineinfile: dest=/etc/resolv.conf line="nameserver 172.18.16.10"

# only for Centos-64-mirantis
- name: "Add OSCI temporary repos"
  template: src=yumrepo.j2 dest=/etc/yum.repos.d/{{item.name}}.repo owner=root group=root mode=0644
  with_items:
    - name: fuel_41_mirror
      baseurl: "http://ss0078.svwh.net/fwm/4.1/centos/os/x86_64/"
    - name: yandex
      baseurl: "http://mirror.yandex.ru/centos/6.5/os/x86_64/"
      enabled: 0

# - name: "install additional requirements from external repo"
#   yum: >
#     name={{ item }}
#     state=latest
#     disable_gpg_check=yes
#     enablerepo="yandex"
#   with_items:
#     - "perl-TimeDate"
#     - "ccs"

- name: "Install corosync, pacemaker and pcs"
  yum: >
    name={{ item }}
    state=latest
    disable_gpg_check=yes
  with_items:
    - "corosync-1.4.6"
    - "pacemaker-1.1.10"
    - "pcs-0.9.103"

- name: "Configure Corosync"
  template: src=corosync1.conf.j2 dest=/etc/corosync/corosync.conf backup=yes owner=root group=root mode=0644
  with_items:
    - bind_interface: "{{ ansible_eth0 }}"  # variable in quotas!!!
  notify:
    - Restart Corosync

- name: "limits.conf"
  copy: src=limits.conf dest=/etc/security/limits.conf owner=root group=root mode=0644 backup=yes

  # if $enable_secauth == 'on' {
  #   file { '/etc/corosync/authkey':
  #     ensure => file,
  #     source => $authkey,
  #     mode   => '0400',
  #     owner  => 'root',
  #     group  => 'root',
  #     notify => Service['corosync'],
  #   }
  # }

- name: "check required directories"
  file: path={{item.name}} mode={{item.mode}} owner={{item.owner}} group={{item.group}} state=directory
  with_items:
    - name: /etc/corosync/service.d
      owner: root
      group: root
      mode:  '0755'
    - name: /var/lib/pacemaker/cores/root
      owner: hacluster
      group: haclient
      mode:  '0750'
    - name: /usr/lib/ocf/resource.d/mirantis
      owner: root
      group: root
      mode:  '0755'

- name: "Pacemaker as Corosync service"
  template: src=corosync1.service.j2 dest=/etc/corosync/service.d/{{item.name}} backup=yes owner=root group=root mode=0644
  with_items:
    - name: pacemaker
      version: 0
  notify:
    - Restart Corosync

- name: "start Corosync"
  service: name=corosync state=started enabled=yes

- name: "copy OCF scripts to remote node"
  copy: src=ocf/{{item.name}} dest=/usr/lib/ocf/resource.d/mirantis/{{item.name}} owner=root group=root mode=0755 backup=yes
  with_items:
    - name: test_masterslave
#